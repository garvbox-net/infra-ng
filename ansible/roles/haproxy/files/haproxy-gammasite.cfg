# HAProxy Config - Ansible Deployment

global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners

        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/ca-certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets


defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        option  forwardfor
        option  http-server-close
        timeout connect 5s
        timeout client  30s
        timeout server  10s
        maxconn 320
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http


listen ln-stats
        bind :8880
        stats enable
        stats hide-version
        stats uri     /
        stats realm   HAProxy Statistics

listen ln-homeassistant
        bind :8123 ssl crt gammasite.garvbox.net.pem
        server hassoo hassoo:8123 check

frontend fe-http
        bind :80
        # Robots.txt
        acl acl_robots path /robots.txt
        # LetsEncrypt SSL
        acl acl_letsencrypt path_beg /.well-known/acme-challenge
        # SSL filters - shove anything we know doesnt need http over https
        redirect scheme https if !{ ssl_fc } !acl_letsencrypt !acl_robots

        # letsencrypt backend
        use_backend bk-letsencrypt if acl_letsencrypt
        # robots.txt backend
        use_backend bk-robots if acl_robots
        # default backend if no matches above
        default_backend bk-error-holder


frontend fe-https
        bind :443 ssl crt gammasite.garvbox.net.pem

        # Set forwarding headers
        http-request set-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-Host %[hdr(host)]
        http-request set-header X-Forwarded-Port %[dst_port]

        # Redirect SSL
        redirect scheme https if !{ ssl_fc }

        # Internal ACL
        acl acl_src_internal src 192.168.0.0/16

        # Public Resources
        acl acl_robots path /robots.txt
        acl acl_letsencrypt path_beg /.well-known/acme-challenge

        # Private Resources
        acl acl_grafana path_beg /acl_grafana
        # flag internal resources
        acl acl_internal path_beg /grafana

        # redirect error 503 if external and using internal resource
        use_backend bk-blocked-external if ! acl_src_internal acl_internal

        # select backends - public first straight through on match
        use_backend bk-robots if acl_robots
        use_backend bk-letsencrypt if acl_letsencrypt

        # Private backends
        use_backend bk-grafana if acl_grafana

        # default backend if no matches above
        default_backend bk-error-holder


# Public Backends
backend bk-robots
        # disable logging errors
        http-request set-log-level silent
        # serve static robots.txt
        errorfile 503 /etc/haproxy/errors/robots.http

backend bk-grafana
        server grafana graffo:3000 check

# Internal Backends
# letsencrypt local host for renewals
backend bk-letsencrypt
        server letsencrypt 127.0.0.1:8888

# block internal resources
backend bk-blocked-external
        errorfile 503 /etc/haproxy/errors/internalonly.http

# Error Holder backend
backend bk-error-holder
        errorfile 503 /etc/haproxy/errors/nobackend.http
